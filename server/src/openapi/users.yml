/login:
  post:
    tags: [Users]
    summary: Iniciar sesión
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
                description: Correo electrónico del usuario
              password:
                type: string
                description: Contraseña del usuario
    responses:
      "200":
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Token de autenticación
                userId:
                  type: string
                  description: ID del usuario
      "401":
        description: Contraseña o email incorrecto
      "500":
        description: Error interno del servidor
/users:
  get:
    tags: [Users]
    summary: "Get all users"
    operationId: "getUsers"
    responses:
      "200":
        description: "Successful operation"
  post:
    tags: [Users]
    summary: "Create a new user"
    operationId: "createUser"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    responses:
      "200":
        description: "User created successfully"
/users/{id}:
  get:
    tags: [Users]
    summary: "Get user by ID"
    operationId: "getUserById"
    parameters:
      - name: "id"
        in: "path"
        required: true
        description: "ID of the user to get"
        schema:
          type: "string"
    responses:
      "200":
        description: "Successful operation"
  put:
    tags: [Users]
    summary: "Update user by ID"
    operationId: "updateUserById"
    parameters:
      - name: "id"
        in: "path"
        required: true
        description: "ID of the user to update"
        schema:
          type: "string"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    responses:
      "200":
        description: "User updated successfully"
  delete:
    tags: [Users]
    summary: "Delete user by ID"
    operationId: "deleteUserById"
    parameters:
      - name: "id"
        in: "path"
        required: true
        description: "ID of the user to delete"
        schema:
          type: "string"
    responses:
      "204":
        description: "User deleted successfully"
